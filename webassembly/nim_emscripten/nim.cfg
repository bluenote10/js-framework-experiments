@if emscripten:
  cc = clang
  clang.exe = "emcc"
  clang.linkerexe = "emcc"
  clang.options.linker = ""
  cpu = "i386"
  #passC = "-s WASM=1 -s 'BINARYEN_METHOD=\"native-wasm\"' -Iemscripten -s EXPORTED_FUNCTIONS=[\"_add\"] -s EXTRA_EXPORTED_RUNTIME_METHODS='[\"ccall\", \"cwrap\"]'"
  passC = "-s WASM=1 -s EXPORTED_FUNCTIONS='[\"_add\", \"_main\"]' -s EXTRA_EXPORTED_RUNTIME_METHODS='[\"ccall\", \"cwrap\"]'"
  #passL = "-s WASM=1 -Lemscripten -s TOTAL_MEMORY=335544320 -s EXTRA_EXPORTED_RUNTIME_METHODS='[\"ccall\", \"cwrap\"]'"
  passL = "-s WASM=1 -s EXPORTED_FUNCTIONS='[\"_add\", \"_main\"]' -s EXTRA_EXPORTED_RUNTIME_METHODS='[\"ccall\", \"cwrap\"]'"
  # use ALLOW_MEMORY_GROWTH=1 instead of TOTAL_MEMORY if performance isn't top priority
@end

# nim c -d:useRealtimeGC -d:release -d:emscripten --out=test.js test.nim
